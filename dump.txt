writeOneRow :: [ClickhouseType]->BS.ByteString
writeOneRow = undefined

writeInt16Column :: Vector ClickhouseType->IOWriter Builder
writeInt16Column col = do
  let l = fromIntegral $  V.length col
  writeVarUInt l
  V.mapM_ writeBinaryInt16 (V.map (\(CKInt16 x)-> x) col)

writeStringColumn :: Vector ClickhouseType->IOWriter Builder
writeStringColumn col = do
  let l = fromIntegral $  V.length col
  writeVarUInt l
  V.mapM_ writeBinaryStr (V.map (\(CKString s)->s) col)

writeFixStringColumn :: Word->Vector ClickhouseType->IOWriter Builder
writeFixStringColumn len col = do
  let l = fromIntegral $ V.length col
  writeVarUInt (l * len)
  V.mapM_ writeIn (V.map (\(CKFixedLengthString _ s)->s) col)

writeTupleColumn :: Vector (ClickhouseType)->IOWriter Builder
writeTupleColumn col = do
  let l = fromIntegral $ V.length col
  writeVarUInt l
  